{"version":3,"sources":["Components/Player.js","Components/VideoList.js","App.js","serviceWorker.js","index.js"],"names":["VideoStyled","styled","div","Player","props","state","isPlaying","isExpanded","volume","vidPlay","bind","vidStop","expandVideo","closeVideo","this","setState","player","expand","mouseEnter","undefined","mouseLeave","blocker","gridView","onEnter","bottomOffset","className","src","file","onMouseEnter","onMouseLeave","onClick","url","playing","controls","viewList","onLeave","topOffset","Component","VideoListStyled","VideoList","setList","setGrid","grid","class","files","map","App","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"43GAKA,IAAMA,EAAcC,IAAOC,IAAV,KAiHIC,E,YACjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAGDC,MAAQ,CACTC,WAAW,EACXC,YAAY,EACZC,OAAQ,GAGZ,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBACf,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBACnB,EAAKG,WAAa,EAAKA,WAAWH,KAAhB,gBAbH,E,uEAiBfI,KAAKC,SAAS,CAAET,WAAW,M,gCAI3BQ,KAAKC,SAAS,CAAET,WAAW,IAC3BQ,KAAKC,SAAS,CAAEP,OAAQ,M,oCAKxBM,KAAKC,SAAS,CAAER,YAAY,IAC5BO,KAAKC,SAAS,CAAEP,OAAQ,MACxBM,KAAKC,SAAS,CAAET,WAAW,M,mCAI3BQ,KAAKC,SAAS,CAAER,YAAY,IAC5BO,KAAKC,SAAS,CAAEP,OAAQ,IACxBM,KAAKC,SAAS,CAAET,WAAW,M,+BAK3B,IAAIU,EAAS,GAab,OAZIF,KAAKT,MAAME,YACXS,EAAOC,OAAS,wBAChBD,EAAOE,gBAAaC,EACpBH,EAAOI,gBAAaD,EACpBH,EAAOK,QAAUP,KAAKD,aAEtBG,EAAOC,OAAS,eAChBD,EAAOE,WAAaJ,KAAKL,QACzBO,EAAOI,WAAaN,KAAKH,QACzBK,EAAOK,QAAUP,KAAKF,aAItB,kBAACZ,EAAD,MACMc,KAAKV,MAAMkB,UAAY,kBAAC,IAAD,CAAUC,QAAST,KAAKL,QAASe,aAAc,QACxE,yBAAKC,UAAU,eACX,yBAAKA,UAAWT,EAAOC,QACnB,yBAAKQ,UAAU,uBACX,yBAAKA,UAAU,YAAYC,IAAK,8BAAgCZ,KAAKV,MAAMuB,KAAO,YAEtF,yBAAKF,UAAU,iBAAiBG,aAAcZ,EAAOE,WAAYW,aAAcb,EAAOI,WAAYU,QAASd,EAAOK,UAClH,yBAAKI,UAAU,oBACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,gBACVX,KAAKT,MAAMC,WACR,kBAAC,IAAD,CAAayB,IAAK,mCAAqCjB,KAAKV,MAAMuB,KAAMnB,OAAQM,KAAKT,MAAMG,OAAQwB,QAASlB,KAAKT,MAAMC,UAAW2B,UAAU,UAOlKnB,KAAKV,MAAM8B,UAAY,kBAAC,IAAD,CAAUC,QAASrB,KAAKH,QAASyB,UAAW,a,GA1EjDC,a,yYClHpC,IAAMC,EAAkBrC,IAAOC,IAAV,KAiBAqC,E,YACjB,WAAYnC,GAAQ,IAAD,8BACf,4CAAMA,KAEDC,MAAQ,CACTiB,UAAU,GAGd,EAAKkB,QAAU,EAAKA,QAAQ9B,KAAb,gBACf,EAAK+B,QAAU,EAAKA,QAAQ/B,KAAb,gBARA,E,uEAYfI,KAAKC,SAAS,CAAEO,UAAU,M,gCAI1BR,KAAKC,SAAS,CAAEO,UAAU,M,+BAGpB,IAAD,OACDoB,EAAO,GACP5B,KAAKT,MAAMiB,SACXoB,EAAKC,MAAQ,cAEbD,EAAKC,MAAQ,OAEjB,IAAMC,EAAQ9B,KAAKV,MAAMwC,MACzB,OACI,kBAACN,EAAD,KACI,yBAAKb,UAAU,iBACX,4BAAQK,QAAShB,KAAK2B,SAAtB,QACA,4BAAQX,QAAShB,KAAK0B,SAAtB,SAEJ,yBAAKf,UAAWiB,EAAKC,OAChBC,EAAMC,KAAI,SAAClB,GAAD,OACP,kBAAC,EAAD,CAAQA,KAAMA,EAAML,SAAU,EAAKjB,MAAMiB,oB,GApC1Be,aCSxBS,E,YAxBb,WAAY1C,GAAQ,IAAD,8BACjB,4CAAMA,KAGRC,MAAQ,CACNuC,MAAO,CAAC,cAAe,cAAe,cAAe,cAAe,cAAe,gBALlE,E,sEASjB,OACE,yBAAKnB,UAAU,OACb,4BAAQA,UAAU,cAChB,yCAEF,6BACE,kBAAC,EAAD,CAAWmB,MAAO9B,KAAKT,MAAMuC,c,GAjBrBG,IAAMV,WCQJW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.74c0549c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport ReactPlayer from 'react-player'\nimport { Waypoint } from 'react-waypoint';\n\nconst VideoStyled = styled.div`\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    margin: 1.5rem 0;\n\n    .waypoint{\n        position: absolute;\n        top: 50%;\n    }\n\n    .video-block{\n        max-width: 50rem;\n        position: relative;\n        width: 100%;\n\n        .video-holder{\n            position: relative;\n\n            &.expanded{\n                position: fixed;\n                background: rgba(0,0,0,0.9);\n                z-index: 100;\n                bottom: 0;\n                left: 0;\n                right: 0;\n                top: 0;\n                width: 100%;\n\n                .thumbnail-container{\n                    display: none;\n                }\n\n                .player-container{\n                    position: relative;\n                    max-width: 72rem;\n                    left: 50%;\n                    top: 50%;\n                    transform: translate(-50%, -50%);\n                    width: calc(100% - 4rem);\n                    z-index: 3;\n\n                    .player-holder{\n                        div{\n                            transform: translateY(0);\n                            height: 100% !important;\n                            width: 100% !important;\n                        }\n                    }\n                }\n            }\n\n            .thumbnail-container{\n                overflow: hidden;\n                position: relative;\n                padding-bottom: 56.25%;\n                width: 100%;\n    \n                .thumbnail{\n                    bottom: 0;\n                    left: 0;\n                    position: absolute;\n                    right: 0;\n                    top: 0;\n                    transform: translateY(-12.5%);\n                    width: 100%;\n                }\n            }\n\n            .iframe-blocker{\n                cursor: pointer;\n                position: absolute;\n                bottom: 0;\n                left: 0;\n                right: 0;\n                top: 0;\n                z-index: 2;\n            }\n    \n            .player-container{\n                cursor: pointer;\n                position: absolute;\n                bottom: 0;\n                left: 0;\n                right: 0;\n                top: 0;\n                z-index: 1;\n                \n                .player-holder{\n                    padding-bottom: 56.25%;\n                    position: relative;\n                    overflow: hidden;\n                    top: 0;\n                    \n                    .player-inner{\n                        position: absolute;\n                        bottom: 0;\n                        left: 0;\n                        right: 0;\n                        top: 0;\n                    }\n        \n                    div{\n                        transform: translateY(-30.01%);\n                        height: 250% !important;\n                        width: 100% !important;\n                    }\n                }\n            }\n        }\n    }\n`\n\nexport default class Player extends Component {\n    constructor(props) {\n        super(props);\n\n\n        this.state = {\n            isPlaying: false,\n            isExpanded: false,\n            volume: 0\n        };\n\n        this.vidPlay = this.vidPlay.bind(this);\n        this.vidStop = this.vidStop.bind(this);\n        this.expandVideo = this.expandVideo.bind(this);\n        this.closeVideo = this.closeVideo.bind(this);\n    }\n\n    vidPlay() {\n        this.setState({ isPlaying: true });\n    }\n\n    vidStop() {\n        this.setState({ isPlaying: false });\n        this.setState({ volume: 0 });\n    }\n\n\n    expandVideo() {\n        this.setState({ isExpanded: true });\n        this.setState({ volume: 100 });\n        this.setState({ isPlaying: true });\n    }\n\n    closeVideo() {\n        this.setState({ isExpanded: false });\n        this.setState({ volume: 0 });\n        this.setState({ isPlaying: false });\n    }\n\n\n    render() {\n        var player = {};\n        if (this.state.isExpanded) {\n            player.expand = 'video-holder expanded';\n            player.mouseEnter = undefined;\n            player.mouseLeave = undefined;\n            player.blocker = this.closeVideo;\n        } else {\n            player.expand = 'video-holder';\n            player.mouseEnter = this.vidPlay;\n            player.mouseLeave = this.vidStop;\n            player.blocker = this.expandVideo;\n\n        }\n        return (\n            <VideoStyled>\n                {!this.props.gridView && <Waypoint onEnter={this.vidPlay} bottomOffset={'30%'} />}\n                <div className=\"video-block\">\n                    <div className={player.expand}>\n                        <div className=\"thumbnail-container\">\n                            <img className=\"thumbnail\" src={'https://img.youtube.com/vi/' + this.props.file + '/0.jpg'} />\n                        </div>\n                        <div className=\"iframe-blocker\" onMouseEnter={player.mouseEnter} onMouseLeave={player.mouseLeave} onClick={player.blocker} />\n                        <div className=\"player-container\">\n                            <div className=\"player-holder\">\n                                <div className=\"player-inner\">\n                                    {this.state.isPlaying &&\n                                        <ReactPlayer url={'https://www.youtube.com/watch?v=' + this.props.file} volume={this.state.volume} playing={this.state.isPlaying} controls={true} />\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {!this.props.viewList && <Waypoint onLeave={this.vidStop} topOffset={'30%'} />}\n            </VideoStyled >\n        )\n    }\n}","import React, { Component } from 'react';\nimport Player from './Player';\nimport styled from \"styled-components\";\n\nconst VideoListStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    \n    .grid{\n        display: grid;\n        grid-template-columns: 100%;\n        justify-content: space-evenly;\t\n\n        &.column{\n            grid-template-columns: 30% 30% 30%;\n            grid-gap: 50px 0px;\n        }\n    }\n`\n\nexport default class VideoList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            gridView: true\n        };\n\n        this.setList = this.setList.bind(this);\n        this.setGrid = this.setGrid.bind(this);\n    }\n\n    setList() {\n        this.setState({ gridView: false });\n    }\n\n    setGrid() {\n        this.setState({ gridView: true });\n    }\n\n    render() {\n        var grid = {};\n        if (this.state.gridView) {\n            grid.class = 'grid column';\n        } else {\n            grid.class = 'grid';\n        }\n        const files = this.props.files;\n        return (\n            <VideoListStyled>\n                <div className='layout-switch'>\n                    <button onClick={this.setGrid}>Grid</button>\n                    <button onClick={this.setList}>List</button>\n                </div>\n                <div className={grid.class}>\n                    {files.map((file) => (\n                        <Player file={file} gridView={this.state.gridView} />\n                    ))}\n                </div>\n            </VideoListStyled>\n        );\n    }\n}","import React from 'react';\nimport './App.css';\nimport VideoList from './Components/VideoList';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    files: ['MRyLC2M1K2w', 'wXhTHyIgQ_U', 'ba7mB8oueCY', 'UYwF-jdcVjY', 'SC4xMk98Pdc', 'SLsTskih7_I']\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Vumble 2</h1>\n        </header>\n        <div>\n          <VideoList files={this.state.files} />\n        </div>\n      </div>\n    );\n  }\n\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}